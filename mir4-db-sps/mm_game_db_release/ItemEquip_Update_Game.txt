CREATE DEFINER=`MM_DBA`@`%` PROCEDURE `ItemEquip_Update_Game`(
	IN	_CharacterUID	BIGINT	UNSIGNED
,	IN	_EquipSlot 		TINYINT	UNSIGNED
,	IN	_ItemUID		BIGINT	UNSIGNED

,	OUT	_Result	INT
)
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION	
    BEGIN 
		GET DIAGNOSTICS CONDITION 1	@Sqlstate = RETURNED_SQLSTATE, @Errno = MYSQL_ERRNO, @Text = MESSAGE_TEXT; 
        SET _Result = @Errno;	
-- 		SELECT @Sqlstate, @Errno, @Text; 
	END;
    
    SET _Result = -1;
        
	MAIN_ROUTINE:
	BEGIN
		IF _CharacterUID = 0 OR _EquipSlot = 0 OR _ItemUID = 0	THEN SET _Result = 3;	LEAVE MAIN_ROUTINE;	END IF;	-- 처리에 필요한 값을 전달받지 못함
        
		-- 아이템 착용
        UPDATE equip_item_tb	SET ItemUID = _ItemUID	WHERE CharacterUID = _CharacterUID AND EquipSlot = _EquipSlot;
        IF ROW_COUNT() <= 0	THEN 
			INSERT IGNORE INTO equip_item_tb ( CharacterUID, EquipSlot, ItemUID )	VALUE ( _CharacterUID, _EquipSlot, _ItemUID );
            IF ROW_COUNT() <= 0	THEN SET _Result = 5;	LEAVE MAIN_ROUTINE;	END IF;	-- 변경된 데이터가 없음
        END IF;
/*        
		INSERT INTO equip_item_tb ( CharacterUID, EquipSlot, ItemUID )	VALUE ( _CharacterUID, _EquipSlot, _ItemUID )	ON DUPLICATE KEY UPDATE ItemUID = _ItemUID;
		IF ROW_COUNT() <= 0	THEN ROLLBACK;	SET _Result = 5;	LEAVE MAIN_ROUTINE;	END IF;	-- 변경된 데이터가 없음
*/		
		SET	_Result = 0;
	END;
END