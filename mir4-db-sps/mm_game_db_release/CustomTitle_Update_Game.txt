CREATE DEFINER=`MM_DBA`@`%` PROCEDURE `CustomTitle_Update_Game`(
	IN	_CharacterUID	BIGINT	UNSIGNED
,	IN	_CustomTitle	VARCHAR(12)

,	IN	_DeleteItemUID			BIGINT		UNSIGNED		
,	IN	_StackDecreaseAmount	MEDIUMINT					
,	IN	_StackResultServer		MEDIUMINT	UNSIGNED				

,	OUT	_StackResultDB	MEDIUMINT
,	OUT	_Result			INT
)
BEGIN
	DECLARE EXIT HANDLER FOR SQLEXCEPTION	
    BEGIN 
		GET DIAGNOSTICS CONDITION 1	@Sqlstate = RETURNED_SQLSTATE, @Errno = MYSQL_ERRNO, @Text = MESSAGE_TEXT; 
        SET _Result = @Errno;	
-- 		SELECT @Sqlstate, @Errno, @Text; 
	END;
    
    SET _StackResultDB = 0, _Result = -1;
        
	MAIN_ROUTINE:
	BEGIN
		IF _CharacterUID = 0 OR _DeleteItemUID = 0	THEN SET _Result = 3;	LEAVE MAIN_ROUTINE;	-- 처리에 필요한 값을 전달받지 못함
   		ELSEIF	_StackDecreaseAmount >= 0			THEN SET _Result = 4;	LEAVE MAIN_ROUTINE;	-- 잘못된 증감값
        END IF;	
		
        START TRANSACTION;
			-- 호칭 변경
			UPDATE customtitle_tb	SET CustomTitle = _CustomTitle	WHERE CharacterUID = _CharacterUID ;
			IF ROW_COUNT() <= 0	THEN 
				INSERT IGNORE INTO customtitle_tb ( CharacterUID , CustomTitle )	VALUE ( _CharacterUID , _CustomTitle );
				IF ROW_COUNT() <= 0	THEN ROLLBACK;	SET _Result = 5;	LEAVE MAIN_ROUTINE;	END IF;	-- 변경된 데이터가 없음
			END IF;
			
            -- 아이템 사용
            CALL ItemStack_Update_DB ( _CharacterUID, _DeleteItemUID, 0, _StackDecreaseAmount, _StackResultServer, _StackResultDB, _Result );										
			IF _Result != 0 THEN ROLLBACK;	LEAVE MAIN_ROUTINE;	END IF;
                
			SET	_Result = 0;
		COMMIT;
	END;
END